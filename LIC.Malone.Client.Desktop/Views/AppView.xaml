<metro:MetroWindow
	x:Class="LIC.Malone.Client.Desktop.Views.AppView"
	xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:cal="http://www.caliburnproject.org"
	xmlns:syntaxControl="clr-namespace:AurelienRibon.Ui.SyntaxHighlightBox;assembly=AurelienRibon.Ui.SyntaxHighlightBox"
	xmlns:extensions="clr-namespace:LIC.Malone.Client.Desktop.Extensions"
	xmlns:local="clr-namespace:LIC.Malone.Client.Desktop"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	Title="Malone"
	TitleCaps="False"
	Icon="Malone.ico"
	ShowIconOnTitleBar="False"
	GlowBrush="{DynamicResource AccentColorBrush}"
	WindowStartupLocation="CenterScreen"
	MinWidth="1000" MinHeight="730"
	Width="1000" Height="730">

	<Window.Resources>
		<SolidColorBrush x:Key="Green_Brush" Color="Green" />
		<SolidColorBrush x:Key="Black_Brush" Color="Black" />

		<Style x:Key="Button_Style" TargetType="{x:Type Button}">
			<Setter Property="Foreground" Value="{StaticResource Green_Brush}" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Center" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="grid">
							
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<Path Grid.Column="0" x:Name="MyPath" 
									SnapsToDevicePixels="True"
									Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
									Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:HyperlinkButton.Icon)}" />
							
							<TextBlock Grid.Column="1" x:Name="MyContent" 
								Padding="10 0 0 0"
															 Text="{TemplateBinding Content}"
															 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
															 VerticalAlignment="{TemplateBinding VerticalAlignment}" />


						</Grid>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Foreground" Value="DeepPink"/>
							</Trigger>

							<!--<Trigger Property="Tag" Value="OnlyText">
								<Setter TargetName="MyPath" Property="Visibility" Value="Collapsed" />
								<Setter TargetName="MyContent" Property="Visibility" Value="Visible" />
							</Trigger>

							<Trigger Property="Tag" Value="OnlyPath">
								<Setter TargetName="MyPath" Property="Visibility" Value="Visible" />
								<Setter TargetName="MyContent" Property="Visibility" Value="Collapsed" />
							</Trigger>-->
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>


	<Grid Name="MainGrid">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*" MinWidth="200" />
			<ColumnDefinition Width="2" />
			<ColumnDefinition Width="2*" MinWidth="500" />
		</Grid.ColumnDefinitions>

		<DockPanel Name="HistoryDockPanel" Grid.Column="0" LastChildFill="True">

			<DockPanel DockPanel.Dock="Top" Margin="4 0 0 0">
				<Label DockPanel.Dock="Left" Style="{StaticResource H1}" Content="History"/>

				<WrapPanel>

					<Button Name="SaveButton"
					 Style="{StaticResource Button_Style}" 
					 local:HyperlinkButton.Icon="{StaticResource squared_cross}"
					 Content="Both"
					 Margin="10" />

					<Button Name="JustText"
					 Style="{StaticResource Button_Style}" 
					 Content="Just Text"
					 Margin="10" />
					
				</WrapPanel>


				<!--<Button DockPanel.Dock="Right" Style="{StaticResource HyperlinkLikeButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 10 6" 
					cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action ClearHistory($executionContext)]">
					
					<StackPanel Orientation="Horizontal">

						<Rectangle Height="10" Width="10" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}">
							<Rectangle.OpacityMask>
								<VisualBrush Visual="{StaticResource appbar_add}" Stretch="Fill" />
							</Rectangle.OpacityMask>
						</Rectangle>

						<TextBlock Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">GitHub   Revert   Expand all Waaah</TextBlock>
					

					</StackPanel>
				</Button>-->
				
				
				<!--<TextBlock><Hyperlink>GitHub   Revert   Expand all
	<Rectangle Height="10" Width="10" Style="{StaticResource Hyperlink}">
		  <Rectangle.OpacityMask>
				<VisualBrush Visual="{StaticResource appbar_add}" Stretch="Fill" />
		  </Rectangle.OpacityMask>
	 </Rectangle></Hyperlink>
				</TextBlock>-->
			</DockPanel>

			<ListBox x:Name="History" HorizontalAlignment="Stretch" SelectionMode="Single"
				cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action HistoryClicked($executionContext)]">

				<ListBox.ItemTemplate>
					<DataTemplate>
						<Grid Margin="7,7">
							<Grid.Resources>
								<extensions:HttpStatusCodeToBrushConverter x:Key="HttpStatusCodeToBrushConverter" />
								<extensions:HttpStatusCodeToIntConverter x:Key="HttpStatusCodeToIntConverter" />
							</Grid.Resources>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="40" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition />
							</Grid.RowDefinitions>

							<TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Method}" Style="{StaticResource History.BaseUrl}" />
							<TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Response.HttpStatusCode, Converter={StaticResource HttpStatusCodeToIntConverter}}" Foreground="{Binding Response.HttpStatusCode, Converter={StaticResource HttpStatusCodeToBrushConverter}}" />

							<TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding BaseUrl}" Style="{StaticResource History.BaseUrl}" />
							<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ResourcePath}" Style="{StaticResource History.ResourcePath}" />
						</Grid>
					</DataTemplate>
				</ListBox.ItemTemplate>

			</ListBox>

		</DockPanel>

		<GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Stretch" />

		<DockPanel Name="RequestResponseDockPanel" Grid.Column="2" LastChildFill="True" Margin="8 0 0 0">

			<DockPanel DockPanel.Dock="Top">
				<Label DockPanel.Dock="Left" Style="{StaticResource H1}" Content="Request" Margin="-2 0 0 0"/>
				<Label DockPanel.Dock="Right" Style="{StaticResource H1Info}" HorizontalAlignment="Right" x:Name="SelectedHistory_AtLocalString" Content="Request Date">
					<Label.ToolTip>
						<Label Content="{Binding Path=.SelectedHistory.AtUtcString}"/>
					</Label.ToolTip>
				</Label>
			</DockPanel>

			<Grid DockPanel.Dock="Top" Name="RequestGrid">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="100" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="40" />
					<RowDefinition Height="40" />
					<RowDefinition Height="40" />
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" Content="URL"/>
				<TextBox Grid.Row="0" Grid.Column="1" x:Name="Url" metro:TextBoxHelper.Watermark="Enter URL or choose from history"
					FontFamily="Calibri" FontSize="14" Height="26" VerticalAlignment="Top" Margin="0 0 90 0"/>

				<ComboBox Grid.Row="0" Grid.Column="1" x:Name="Methods" Margin="0 0 15 0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="65" />

				<Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Content="Token"/>
				<ComboBox Grid.Row="1" Grid.Column="1" x:Name="Tokens" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200">
					<ComboBox.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Name}" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
				<Button Grid.Row="1" Grid.Column="1" x:Name="ManageTokens" Content="Manage Tokens" HorizontalAlignment="Left" VerticalAlignment="Top" Width="110" Margin="230,0,0,0" />

				<Button Grid.Row="2" Grid.Column="1" x:Name="Send" Content="Send" HorizontalAlignment="Left" VerticalAlignment="Top" Width="70"/>
			</Grid>

			<DockPanel DockPanel.Dock="Top">
				<Label DockPanel.Dock="Left" Style="{StaticResource H1}" Content="Response" Margin="-2 0 0 0"/>
				<Label DockPanel.Dock="Left" Style="{StaticResource H1Info}" x:Name="SelectedHistory_ResponseTime" Content="Time"/>
				<Label DockPanel.Dock="Right" Style="{StaticResource H1Info}" x:Name="SelectedHistory_Response_AtLocalString" HorizontalAlignment="Right" Content="Response Date">
					<Label.ToolTip>
						<Label Content="{Binding Path=.SelectedHistory.Response.AtUtcString}"/>
					</Label.ToolTip>
				</Label>
			</DockPanel>

			<Grid DockPanel.Dock="Top" Name="ResponseGrid">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="100" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="43" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" Content="HTTP Status"/>
				<ContentControl Grid.Row="0" Grid.Column="1" x:Name="HttpStatusCode" HorizontalAlignment="Left" Width="400" />

				<Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Content="Content"/>
				<syntaxControl:SyntaxHighlightBox Grid.Row="1" Grid.Column="1" Name="ResponseContent" Margin="0,0,15,15" IsReadOnly="False" />

			</Grid>

		</DockPanel>

		<!--<Canvas Grid.Column="2">
			<TextBox x:Name="Token" HorizontalAlignment="Left" Height="73" TextWrapping="Wrap" VerticalAlignment="Top" Width="473" Canvas.Left="493" Canvas.Top="127"/>
		</Canvas>-->
	</Grid>

	<!-- TODO: Have some settings. -->
	<!--<metro:MetroWindow.RightWindowCommands>
		<metro:WindowCommands>
			<Button Content="Settings" cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action ManageTokens()]" />
		</metro:WindowCommands>
	</metro:MetroWindow.RightWindowCommands>-->

	<!-- TODO: Figure out how to auto-bind inside the flyout. -->
	<metro:MetroWindow.Flyouts>
		<metro:FlyoutsControl Name="AddToken">
			<metro:Flyout Header="Add Token" Position="Right" Width="600" IsOpen="{Binding ShowAddTokenFlyout}">
				<Grid>
					<Label Content="Authentication URL" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
					<ComboBox Name="AuthenticationUrls" ItemsSource="{Binding AuthenticationUrls}" SelectedItem="{Binding SelectedAuthenticationUrl}" DisplayMemberPath="AbsoluteUri" SelectedValuePath="Content" HorizontalAlignment="Left"
						Margin="140,10,0,0" VerticalAlignment="Top" Width="400"/>

					<Label Content="Application" HorizontalAlignment="Left" Margin="10,50,0,0" VerticalAlignment="Top"/>
					<ComboBox x:Name="Applications" ItemsSource="{Binding Applications}" SelectedItem="{Binding SelectedApplication}" SelectedValuePath="Content" HorizontalAlignment="Left"
						Margin="140,50,0,0" VerticalAlignment="Top" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Name}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<Label Content="Username" HorizontalAlignment="Left" Margin="10,90,0,0" VerticalAlignment="Top"/>
					<TextBox x:Name="Username" Text="{Binding Username}"  HorizontalAlignment="Left" Height="23" Margin="140,90,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200"/>

					<Label Content="Password" HorizontalAlignment="Left" Margin="10,130,0,0" VerticalAlignment="Top"/>
					<TextBox x:Name="Password" Text="{Binding Password}" HorizontalAlignment="Left" Height="23" Margin="140,130,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200"/>

					<Button x:Name="Authenticate" Content="Authenticate" cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action Authenticate()]"
						HorizontalAlignment="Left" Margin="140,170,0,0" VerticalAlignment="Top" Width="95" />

					<Label Content="Response" HorizontalAlignment="Left" Margin="10,210,0,0" VerticalAlignment="Top"/>
					<syntaxControl:SyntaxHighlightBox x:Name="AuthResponse" Text="{Binding AuthResponse}"
						Margin="15,240,0,0" Height="300" VerticalAlignment="Top" HorizontalAlignment="Left" Width="570"/>

					<Label Content="Token name" HorizontalAlignment="Left" Margin="10,560,0,0" VerticalAlignment="Top"/>
					<TextBox Name="TokenName" Text="{Binding TokenName}" HorizontalAlignment="Left" Height="23" Margin="145,560,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="252"/>

					<Button Name="SaveToken" Content="Save Token" cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action SaveToken()]"
						HorizontalAlignment="Left" Margin="145,600,0,0" VerticalAlignment="Top" Width="87"/>
				</Grid>

			</metro:Flyout>
		</metro:FlyoutsControl>
	</metro:MetroWindow.Flyouts>

</metro:MetroWindow>
